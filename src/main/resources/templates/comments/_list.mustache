<!--댓글 목록 영역 설정-->
<div id="comments-list">
<!--    댓글 목록 순회-->
    {{#commentDtos}}
<!--        댓글 카드 만들고, 아이디 부여-->
        <div class="card m-2" id="comments-{{id}}">
<!--            댓글 헤더 부분-->
            <div class="card-header">
<!--                닉네임 보여주기-->
                {{nickname}}
<!--                수정 버튼 넣을 위치-->
                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-nicknmame="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{articleId}">
                            수정</button>
<!--                data- 로 시작하는 속성을 데이터 속성이라고 함.
html 요소에 추가 정보를 저장하고 싶을때 사용-->
<!--                댓글 삭제 버튼-->
                <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}">삭제</button>

                <!-- Modal -->
                <div class="modal fade" id="comment-edit-modal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title"
                                    id="exampleModalLabel">댓글 수정</h5>
                                <button type="button"
                                        class="btn-close"
                                        data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
<!--                                댓글 수정 폼-->
                                <form>
                                    <!--            닉네임 입력-->
                                    <div class="mb-3">
                                        <label class="form-label">닉네임</label>
                                        <input type="text" class="form-control" id="edit-comment-nickname">
                                    </div>
                                    <!--            댓글 본문 입력-->
                                    <div class="mb-3">
                                        <label class="form-label">댓글 내용</label>
                                        <textarea type="text" class="form-control" rows="3"
                                                  id="edit-comment-body"></textarea>
                                    </div>
                                    <!--            히든 인풋-->
                                        <input type="hidden" id="edit-comment-id">
                                        <input type="hidden" id="edit-comment-article-id">
                                    <!--            전송 버튼-->
                                    <button type="button" class="btn btn-primary"
                                            id="comment-update-btn">수정 완료</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
<!--            댓글 본문 영역-->
            <div class="card-body">
<!--                댓글 본문 보여주기-->
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

<!--모달 이벤트 처리 : 받아온 데이터를 모달의 각 폼에 출력하는 것-->
<script>
    {
        //모달 요소 선택
        const commentEditModal = document.querySelector("#comment-edit-modal");
        //  모달 이벤트 감지
        /*이벤트 타입
        * show.bs.modal : 모달이 표시되기 직전 실행되는 이벤트
        * shown.bs.modal : 모달이 표시된 후 실행되는 이벤트
        * hide.bs.modal : 모달이 숨겨지기 직전 실행되는 이벤트
        * hidden.bs.modal : 모달이 숨겨진 후 실행되는 이벤트
        */
        /* function : 이벤트를 받아 처리하는 함수. 즉 이벤트 핸들러
         function(event) 에서 event : 이벤트 정보를 가르키는 매개변수. 즉 show.bs.modal을 뜻함*/
        commentEditModal.addEventListener("show.bs.modal", function (event) {
            // 1. 트리거 버튼 선택
            const triggerBtn = event.relatedTarget;
            // 2. 데이터 가져오기
            const id = triggerBtn.getAttribute("data-bs-id");
            const nickname = triggerBtn.getAttribute("data-bs-nickname");
            const body = triggerBtn.getAttribute("data-bs-body");
            const articleId = triggerBtn.getAttribute("data-bs-article-id");
            // 3. 수정 폼에 데이터 반영
            document.querySelector("#edit-comment-nickname").value = nickname;
            document.querySelector("#edit-comment-body").value = body;
            document.querySelector("#edit-comment-id").value = id;
            document.querySelector("#edit-comment-article-id").value = articleId;

        });

    }
    {
        //수정 완료 버튼 선택
        const commentUpdateBtn = document.querySelector("#comment-update-btn");
        // 클릭 이벤트 처리
        commentUpdateBtn.addEventListener("click", function(){
            // 수정 댓글 객체 생성
            const comment = {
                id: document.querySelector("#edit-comment-id").value,
                nickname: document.querySelector("#edit-comment-nickname").value,
                body: document.querySelector("#edit-comment-body").value,
                article_id: document.querySelector("#edit-comment-article-id").value
            };
            console.log(comment);
            //수정 rest api 호출
            const url = "/api/comments/" + comment.id;
            fetch(url, {
                method: "PATCH",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(comment)
            }).then(response => {
                // HTTP 응답 코드에 따른 메세지 출력
                const msg = (response.ok) ? "댓글이 수정되었습니다." : "댓글 수정 실패..ㅠ";
                alert(msg);
                //현재 페이지 새로 고침
                window.location.reload();
            })
        })
    }
</script>

<!-- 댓글 삭제 -->
<script>
    {
        // 삭제 버튼 선택
        const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
        // 삭제 버튼 이벤트 처리
        // commentDeleteBtn.addEventListener("click", function() {
        //     console.log("삭제 버튼이 클릭됐습니다..!");
        // });
        commentDeleteBtns.forEach(btn => {
            btn.addEventListener("click", (event) => {
                // 이벤트 발생 요소 선택
                const commentDeleteBtn = event.target;
                // 삭제 댓글 id 가져오기
                const commentId = commentDeleteBtn.getAttribute("data-comment-id");
                console.log(`삭제 버튼 클릭: ${commentId}번 댓글`);
                // 삭제 REST API 호출
                const url = `/api/comments/${commentId}`;
                fetch(url, {
                    method: "DELETE"
                }).then(response => {
                    // 댓글 삭제 실패 처리
                    if (!response.ok) {
                        alert("댓글 삭제 실패..!");
                        return;
                    }
                    // 삭제 성공 시 메시지 창 띄우기
                    const msg = `${commentId}번 댓글을 삭제했습니다.`;
                    alert(msg);
                    // 현재 페이지 새로 고침
                    window.location.reload();
                });
            });
        });
    }
</script>
